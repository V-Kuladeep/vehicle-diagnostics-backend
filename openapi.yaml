openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Vehicle Diagnostics API"
  description: "API for uploading and querying vehicle diagnostic logs using Node.js + TypeScript."
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"

servers:
  - url: http://localhost:3000
    description: Local development server

tags:
  - name: upload
    description: Upload and fetch diagnostic logs

paths:
  /logs/upload:
    post:
      tags:
        - upload
      summary: Upload log file
      operationId: uploadLogs
      description: Accepts a plain text diagnostic log and stores parsed entries into the DB.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                logFile:
                  type: string
                  example: "[2025-07-24 14:21:08] [VEHICLE_ID:1234] [ERROR] [CODE:U0420] [Steering angle sensor malfunction]"
              required:
                - logFile
      responses:
        "201":
          description: Logs uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "5 logs stored."
        "400":
          description: Invalid log input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /logs:
    get:
      tags:
        - upload
      summary: Fetch logs with optional filters
      operationId: getLogs
      parameters:
        - in: query
          name: vehicle
          schema:
            type: string
          description: Filter by vehicle ID
        - in: query
          name: code
          schema:
            type: string
          description: Filter by error code
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          description: Start datetime in ISO format
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          description: End datetime in ISO format
      responses:
        "200":
          description: Logs fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logs fetched successfully."
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/LogEntry"
        "404":
          description: No logs found for given filters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    LogEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2025-07-24 14:21:08"
        vehicleId:
          type: string
          example: "1234"
        level:
          type: string
          example: "ERROR"
        code:
          type: string
          example: "U0420"
        message:
          type: string
          example: "Steering angle sensor malfunction"
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "No valid log entries found."
